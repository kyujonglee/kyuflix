{"version":3,"sources":["assets/noImage.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","api_key.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Video.js","Routes/Video/index.js","Components/Company.js","Routes/Company/index.js","Components/Season.js","Routes/Season/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collections/CollectionsPresenter.js","Routes/Collections/index.js","Routes/Collections/CollectionsContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","Components_Loader","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","collections","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","original_title","original_name","SearchContainer","event","preventDefault","_this","searchByTerm","target","console","log","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","Object","assign","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","pathname","location","Video_templateObject","Video","videoKey","href","Routes_Video_templateObject","Videos","Video_Container","video","Components_Video","Company_templateObject","Img","img","Company_templateObject2","Company_templateObject3","Company","logoPath","Company_Container","src","alt","Company_Title","Routes_Company_templateObject","Companies","Routes_Company_Container","company","Components_Company","logo_path","Season_templateObject","Season_templateObject2","Count","Season_templateObject3","Season_templateObject4","Season_templateObject5","Season_templateObject6","Season","count","Season_Container","Season_ImageContainer","Season_Image","Season_Title","Season_Year","Seasons","season","Components_Season","air_date","episode_count","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","ImdbLink","_templateObject11","TabContainer","_templateObject12","Tab","_templateObject13","select","CTitle","_templateObject14","TabContent","_templateObject15","Collection","button","_templateObject16","DetailPresenter","match","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","idx","imdb_id","overview","split","videos","production_companies","production_countries","created_by","seasons","Routes_Video","Routes_Company","country","per","Routes_Season","belongs_to_collection","type","DetailContainer","_default","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","push","history","parseId","parseInt","isNaN","Detail_DetailPresenter","CollectionsPresenter_templateObject","CollectionsPresenter","CollectionsPresenter_Container","coll","CollectionsContainer","_useState","useState","_useState2","slicedToArray","useEffect","asyncToGenerator","mark","parts","objectSpread","apply","arguments","fetchData","Collections_CollectionsPresenter","Router","Components_Header","react_router","exact","path","component","Home","TV","Search","Detail","Collections","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d8435d27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImage.19d65de1.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  display: inline-block;\n  font-size: 16px;\n  font-weight: 600;\n  margin: 10px 5px;\n  text-transform: capitalize;\n`;\n\nconst Grid = styled.div`\n  margin-bottom: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size : 32px;\n  margin-top : 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n  font-size: 32px;\n`;\n\nconst Message = ({ color, text }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  display: block;\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\n              : require('../assets/noImage.png')\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ✨\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | kyuflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"now playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"upcoming\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"popular\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"red\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\nimport api_key from './api_key';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key,\n    language: 'ko-KR'\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: term =>\n    api.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  collections : id => \n    api.get(`collection/${id}`)\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: term =>\n    api.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","export default '86d79d1c1414c6932f3d59c37a0085a5';","import HomeContainer from './HomeContainer';\nexport default HomeContainer;","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({ error: \"Can't find movies infromation.\" });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return <HomePresenter {...this.state} />;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Tv Shows | kyuflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                isMovie={false}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                isMovie={false}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                isMovie={false}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"red\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    return <TVPresenter {...this.state} />;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../Components/Loader';\nimport Section from '../../Components/Section';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | kyuflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or Shows\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"Tv Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                isMovie={false}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"red\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text={`Nothing Found for ${searchTerm}`} color=\"#f7f7f7\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    console.log(value);\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    return (\n      <SearchPresenter\n        {...this.state}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0%;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index : 10;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height : 50px;\n  text-align: center;\n  border-bottom : 5px solid ${props => props.current ? \"white\" : \"transparent\"};\n  transition : border-bottom 0.3s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height : 50px;\n  display : flex;\n  align-items : center;\n  justify-content : center;\n`;\n\nexport default withRouter(({location : {pathname}}) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Link = styled.a`\n  display: block;\n  cursor: pointer;\n  margin: 10px;\n  color: rgba(255, 255, 255, 0.8);\n  transition: all 0.3s ease-in-out;\n  font-size: 16px;\n  &:hover {\n    transform: scale(1.01);\n  }\n`;\n\nconst Video = ({ videoKey, name }) => {\n  return (\n    <Link href={`https://www.youtube.com/watch?v=${videoKey}`} target=\"_blank\">\n      {name}\n    </Link>\n  );\n};\n\nVideo.propTypes = {\n    videoKey: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default Video;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Video from '../../Components/Video';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Videos = ({ results }) => {\n  return (\n    <Container>\n      {results.map(video => (\n        <Video key={video.id} videoKey={video.key} name={video.name} />\n      ))}\n    </Container>\n  );\n};\n\nVideos.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      key: PropTypes.string,\n      name: PropTypes.string\n    }).isRequired\n  ).isRequired\n};\n\nexport default Videos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 5px;\n  padding: 0px 10px;\n  box-sizing: border-box;\n`;\n\nconst Img = styled.img`\n  width: auto;\n  height: 100px;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.span`\n  display: inline-block;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.8);\n  margin: 3px;\n`;\n\nconst Company = ({ name, logoPath }) => {\n  return (\n    <Container>\n      <Img\n        src={\n          logoPath\n            ? `https://image.tmdb.org/t/p/original${logoPath}`\n            : require('../assets/noImage.png')\n        }\n        alt={name}\n      />\n      <Title>{name}</Title>\n    </Container>\n  );\n};\n\nCompany.propTypes = {\n  name: PropTypes.string.isRequired,\n  logoPath: PropTypes.string\n};\n\nexport default Company;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Company from '../../Components/Company';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Companies = ({ results }) => {\n  return (\n    <Container>\n      {results.map(company => (\n        <Company\n          key={company.id}\n          name={company.name}\n          logoPath={company.logo_path}\n        />\n      ))}\n    </Container>\n  );\n};\n\nCompanies.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      logoPath: PropTypes.string,\n      name: PropTypes.string\n    }).isRequired\n  ).isRequired\n};\n\nexport default Companies;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Count = styled.span`\n  display: block;\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  font-size: 14px;\n  font-weight: 600;\n  color: #feca57;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Count} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Season = ({ imageUrl, title, year, count }) => {\n  return (\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\n              : require('../assets/noImage.png')\n          }\n        />\n        <Count>{count}</Count>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  );\n};\n\nexport default Season;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../../Components/Section';\nimport Season from '../../Components/Season';\n\nconst Seasons = ({ results }) => {\n  return (\n    <Section>\n      {results.map(season => (\n        <Season\n          key={season.id}\n          imageUrl={season.poster_path}\n          title={season.name}\n          year={season.air_date}\n          count={season.episode_count}\n        />\n      ))}\n    </Section>\n  );\n};\n\nSeasons.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      name: PropTypes.string,\n      air_date: PropTypes.string,\n      episode_count: PropTypes.number\n    }).isRequired\n  ).isRequired\n};\n\nexport default Seasons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link, withRouter } from 'react-router-dom';\nimport Loader from '../../Components/Loader';\nimport Helmet from 'react-helmet';\nimport Videos from '../Video';\nimport Companies from '../Company';\nimport Seasons from '../Season';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0%;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  position: relative;\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 2;\n  width: 50%;\n`;\n\nconst ImdbLink = styled.a`\n  all: unset;\n  width: 20px;\n  height: 10px;\n  background-color: #f5c518;\n  color: #000000;\n  border-radius: 5px;\n  font-weight: 900;\n  text-transform: capitalize;\n  padding: 2px 5px;\n  box-sizing: border-box;\n  cursor: pointer;\n`;\n\nconst TabContainer = styled.ul`\n  display: flex;\n  margin-top: 10px;\n`;\n\nconst Tab = styled.li`\n  background-color: rgba(255, 255, 255, 0.2);\n  border-bottom: ${props => (props.select ? '2px solid white' : 'none')};\n  box-sizing: border-box;\n  padding: 10px 10px;\n  font-size: 14px;\n  color: white;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n  &:hover {\n    transform: translateY(-3px);\n  }\n`;\n\nconst CTitle = styled.span`\n  border-radius: 5px;\n  padding: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.8);\n  margin: 3px;\n`;\n\nconst TabContent = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 30px 0px;\n  transition: all 0.3s ease-in-out;\n`;\n\nconst Collection = styled.button`\n  all: unset;\n  position: absolute;\n  bottom: 20px;\n  left: 5px;\n  transition: transform 0.3s ease-in-out;\n  font-size: 20px;\n  padding: 10px;\n  background-color: rgba(255, 107, 107);\n  border-radius: 5px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  &:hover {\n    transform: translateY(-3px);\n  }\n`;\n\nconst DetailPresenter = withRouter(\n  ({\n    location: { pathname },\n    match: {\n      params: { id }\n    },\n    result,\n    loading,\n    error\n  }) => {\n    return loading ? (\n      <>\n        <Helmet>\n          <title>Loading | kyuflix</title>\n        </Helmet>\n        <Loader />\n      </>\n    ) : (\n      <Container>\n        <Helmet>\n          <title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}{' '}\n            | kyuflix\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require('../../assets/noImage.png')\n            }\n          />\n          <Data>\n            <Title>{result.title ? result.title : result.name}</Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>·</Divider>\n              <Item>\n                {result.runtime ? result.runtime : result.episode_run_time[0]}{' '}\n                min\n              </Item>\n              <Divider>·</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, idx) =>\n                    idx === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n              {result.imdb_id ? (\n                <>\n                  <Divider>·</Divider>\n                  <Item>\n                    <ImdbLink\n                      href={`https://www.imdb.com/title/${result.imdb_id}`}\n                      target=\"_blank\">\n                      imdb\n                    </ImdbLink>\n                  </Item>\n                </>\n              ) : null}\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n            <TabContainer>\n              <Link\n                to={\n                  pathname.split('/')[1] === 'movie'\n                    ? `/movie/${id}/youtube`\n                    : `/show/${id}/youtube`\n                }>\n                {result.videos.results &&\n                  result.videos.results.length !== 0 && (\n                    <Tab\n                      select={\n                        pathname === `/movie/${id}/youtube` ||\n                        pathname === `/show/${id}/youtube`\n                      }>\n                      Youtube\n                    </Tab>\n                  )}\n              </Link>\n              <Link\n                to={\n                  pathname.split('/')[1] === 'movie'\n                    ? `/movie/${id}/companies`\n                    : `/show/${id}/companies`\n                }>\n                {result.production_companies &&\n                  result.production_companies.length !== 0 && (\n                    <Tab\n                      select={\n                        pathname === `/movie/${id}/companies` ||\n                        pathname === `/show/${id}/companies`\n                      }>\n                      Production Company\n                    </Tab>\n                  )}\n              </Link>\n              <Link to={`/movie/${id}/countries`}>\n                {result.production_countries &&\n                  result.production_countries.length !== 0 && (\n                    <Tab select={pathname === `/movie/${id}/countries`}>\n                      Production Countries\n                    </Tab>\n                  )}\n              </Link>\n              <Link to={`/show/${id}/created_by`}>\n                {result.created_by && result.created_by.length !== 0 && (\n                  <Tab select={pathname === `/show/${id}/created_by`}>\n                    Created By\n                  </Tab>\n                )}\n              </Link>\n              <Link to={`/show/${id}/seasons`}>\n                {result.seasons && result.seasons.length !== 0 && (\n                  <Tab select={pathname === `/show/${id}/seasons`}>Seasons</Tab>\n                )}\n              </Link>\n            </TabContainer>\n            <TabContent id=\"tabResult\">\n              {(pathname === `/movie/${id}/youtube` ||\n                pathname === `/show/${id}/youtube`) && (\n                <Videos results={result.videos.results} />\n              )}\n              {(pathname === `/movie/${id}/companies` ||\n                pathname === `/show/${id}/companies`) && (\n                <Companies results={result.production_companies} />\n              )}\n              {pathname === `/movie/${id}/countries` &&\n                result.production_countries.map((country, idx) => (\n                  <CTitle key={idx}>{country.name}</CTitle>\n                ))}\n              {pathname === `/show/${id}/created_by` &&\n                result.created_by.map(per => (\n                  <CTitle key={per.id}>{per.name}</CTitle>\n                ))}\n              {pathname === `/show/${id}/seasons` && (\n                <Seasons results={result.seasons} />\n              )}\n            </TabContent>\n            {result.belongs_to_collection && (\n              <Link to={`/collections/${result.belongs_to_collection.id}`}>\n                <Collection type=\"button\">Collection</Collection>\n              </Link>\n            )}\n          </Data>\n        </Content>\n      </Container>\n    );\n  }\n);\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes('/movie/')\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parseId = parseInt(id);\n    if (isNaN(parseId)) {\n      return push('/');\n    }\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parseId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parseId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    return <DetailPresenter {...this.state} />;\n  }\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Loader from '../../Components/Loader';\nimport Poster from '../../Components/Poster';\nimport Section from '../../Components/Section';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst CollectionsPresenter = ({ result, loading, error }) => {\n  return loading ? (\n    <>\n      <Helmet>\n        <title>Loading | kyuflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <>\n      <Helmet>\n        <title>Collection | kyuflix</title>\n      </Helmet>\n      <Container>\n        <Section title=\"Collections\">\n          {result.map(coll => (\n            <Poster\n              key={coll.id}\n              id={coll.id}\n              title={coll.title}\n              imageUrl={coll.backdrop_path}\n              rating={coll.vote_average}\n              year={coll.release_date}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      </Container>\n    </>\n  );\n};\n\nexport default CollectionsPresenter;\n","import CollectionsContainer from './CollectionsContainer';\n\nexport default CollectionsContainer;\n","import React, { useState, useEffect } from 'react';\nimport CollectionsPresenter from './CollectionsPresenter';\nimport { moviesApi } from '../../api';\n\nconst CollectionsContainer = props => {\n  const [state, setState] = useState({\n    result: null,\n    loading: true,\n    error: null\n  });\n  const {\n    match: {\n      params: { id }\n    }\n  } = props;\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data: {\n          data: { parts: result }\n        }\n      } = await moviesApi.collections(id);\n      setState(state => ({\n        ...state,\n        result,\n        loading: false\n      }));\n    };\n    fetchData();\n  }, [id]);\n  return <CollectionsPresenter {...state} />;\n};\n\nexport default CollectionsContainer;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Home from '../Routes/Home';\nimport TV from '../Routes/TV';\nimport Search from '../Routes/Search';\nimport Header from './Header';\nimport Detail from '../Routes/Detail';\nimport Collections from '../Routes/Collections';\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Route path=\"/collections/:id\" component={Collections} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color: inherit;\n    }\n    * {\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size : 14px;\n        background-color : rgba(20,20,20,1);\n        color : white;\n        padding-top : 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from './GlobalStyles';\nimport '../api';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}